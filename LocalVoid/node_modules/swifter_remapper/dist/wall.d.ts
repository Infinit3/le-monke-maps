import { AnimationInternals, Track, TrackValue } from './animation';
import { WALL } from './constants';
export declare class Wall {
    json: any;
    animate: AnimationInternals.WallAnimation;
    /**
     * Wall object for ease of creation.
     * @param {Number} time
     * @param {Number} duration
     * @param {Number} type Can be left empty to create a noodle wall template.
     * @param {Number} lineIndex
     * @param {Number} width
     */
    constructor(time?: number, duration?: number, type?: WALL, lineIndex?: number, width?: number);
    /**
     * Create a wall using JSON.
     * @param {Object} json
     * @returns {Note}
     */
    import(json: any): this;
    /**
     * Push this wall to the difficulty
     */
    push(): this;
    /**
     * Apply an animation through the Animation class.
     * @param {Animation} animation
     */
    importAnimation(animation: AnimationInternals.BaseAnimation): this;
    get time(): number;
    get type(): number;
    get duration(): number;
    get lineIndex(): number;
    get width(): number;
    get customData(): any;
    get scale(): number[];
    get position(): number[];
    get rotation(): number[];
    get localRotation(): number[];
    get NJS(): number;
    get offset(): number;
    get halfJumpDur(): number;
    get jumpDist(): number;
    get life(): number;
    get lifeStart(): number;
    get fake(): boolean;
    get interactable(): boolean;
    get track(): Track;
    get color(): number[];
    get animation(): any;
    set time(value: number);
    set type(value: number);
    set duration(value: number);
    set lineIndex(value: number);
    set width(value: number);
    set customData(value: any);
    set scale(value: number[]);
    set position(value: number[]);
    set rotation(value: number[]);
    set localRotation(value: number[]);
    set NJS(value: number);
    set offset(value: number);
    set life(value: number);
    set lifeStart(value: number);
    set fake(value: boolean);
    set interactable(value: boolean);
    set trackSet(value: TrackValue);
    set color(value: number[]);
    set animation(value: any);
    get isModded(): boolean;
}
