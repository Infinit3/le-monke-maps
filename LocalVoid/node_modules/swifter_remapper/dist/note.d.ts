import { AnimationInternals, Track, TrackValue } from './animation';
import { NOTE } from './constants';
export declare class Note {
    json: any;
    animate: AnimationInternals.NoteAnimation;
    /**
     * Note object for ease of creation
     * @param {Number} time
     * @param {Number} type
     * @param {Number} direction
     * @param {Array} position Array for x and y of the note. If an additional boolean of true is added, it will be converted to a noodle position instead of the vanilla grid.
     */
    constructor(time?: number, type?: NOTE, direction?: NOTE, position?: [number, number, boolean?]);
    /**
     * Create a note using JSON.
     * @param {Object} json
     * @returns {Note}
     */
    import(json: any): this;
    /**
     * Push this note to the difficulty
     */
    push(): this;
    /**
     * Apply an animation through the Animation class.
     * @param {Animation} animation
     */
    importAnimation(animation: AnimationInternals.BaseAnimation): this;
    get time(): number;
    get type(): number;
    get direction(): number;
    get customData(): any;
    get preciseDirection(): number;
    get flip(): boolean;
    get noteGravity(): boolean;
    get noteLook(): boolean;
    get spawnEffect(): boolean;
    get position(): [number, number, boolean?];
    get rotation(): number[];
    get localRotation(): number[];
    get NJS(): number;
    get offset(): number;
    get halfJumpDur(): number;
    get jumpDist(): number;
    get life(): number;
    get lifeStart(): number;
    get fake(): boolean;
    get interactable(): boolean;
    get track(): Track;
    get color(): number[];
    get animation(): any;
    set time(value: number);
    set type(value: number);
    set direction(value: number);
    set customData(value: any);
    set preciseDirection(value: number);
    set flip(value: boolean);
    set noteGravity(value: boolean);
    set noteLook(value: boolean);
    set spawnEffect(value: boolean);
    set position(value: [number, number, boolean?]);
    set rotation(value: number[]);
    set localRotation(value: number[]);
    set NJS(value: number);
    set offset(value: number);
    set life(value: number);
    set lifeStart(value: number);
    set fake(value: boolean);
    set interactable(value: boolean);
    set trackSet(value: TrackValue);
    set color(value: number[]);
    set animation(value: any);
    get isModded(): boolean;
}
