"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LOOKUP = exports.COLOR = exports.ENV = exports.ANIM = exports.EVENT = exports.WALL = exports.NOTE = exports.PRESET = exports.SETTINGS = exports.SPLINE = exports.EASE = exports.ENV_NAMES = exports.MODS = void 0;
const regex_1 = require("./regex");
var MODS;
(function (MODS) {
    MODS["NOODLE_EXTENSIONS"] = "Noodle Extensions";
    MODS["CHROMA"] = "Chroma";
})(MODS = exports.MODS || (exports.MODS = {}));
var ENV_NAMES;
(function (ENV_NAMES) {
    ENV_NAMES["BTS"] = "BTSEnvironment";
    ENV_NAMES["BIG_MIRROR"] = "BigMirrorEnvironment";
    ENV_NAMES["BILLIE"] = "BillieEnvironment";
    ENV_NAMES["CRAB_RAVE"] = "CrabRaveEnvironment";
    ENV_NAMES["DEFAULT"] = "DefaultEnvironment";
    ENV_NAMES["DRAGONS"] = "DragonsEnvironment";
    ENV_NAMES["FITBEAT"] = "FitBeatEnvironment";
    ENV_NAMES["GAGA"] = "GagaEnvironment";
    ENV_NAMES["GREENDAY"] = "GreenDayEnvironment";
    ENV_NAMES["GREENDAY_GRENADE"] = "GreenDayGrenadeEnvironment";
    ENV_NAMES["INTERSCOPE"] = "InterscopeEnvironment";
    ENV_NAMES["KDA"] = "KDAEnvironment";
    ENV_NAMES["KALEIDOSCOPE"] = "KaleidoscopeEnvironment";
    ENV_NAMES["LINKIN_PARK"] = "LinkinParkEnvironment";
    ENV_NAMES["MONSTERCAT"] = "MonstercatEnvironment";
    ENV_NAMES["NICE"] = "NiceEnvironment";
    ENV_NAMES["ORIGINS"] = "OriginsEnvironment";
    ENV_NAMES["PANIC"] = "PanicEnvironment";
    ENV_NAMES["ROCKET_LEAGUE"] = "RocketEnvironment";
    ENV_NAMES["SKRILLEX"] = "SkrillexEnvironment";
    ENV_NAMES["SPOOKY"] = "HalloweenEnvironment";
    ENV_NAMES["TIMBALAND"] = "TimbalandEnvironment";
    ENV_NAMES["TRIANGLE"] = "TriangleEnvironment";
})(ENV_NAMES = exports.ENV_NAMES || (exports.ENV_NAMES = {}));
var EASE;
(function (EASE) {
    EASE["LINEAR"] = "easeLinear";
    EASE["STEP"] = "easeStep";
    EASE["IN_QUAD"] = "easeInQuad";
    EASE["OUT_QUAD"] = "easeOutQuad";
    EASE["IN_OUT_QUAD"] = "easeInOutQuad";
    EASE["IN_CUBIC"] = "easeInCubic";
    EASE["OUT_CUBIC"] = "easeOutCubic";
    EASE["IN_OUT_CUBIC"] = "easeInOutCubic";
    EASE["IN_QUART"] = "easeInQuart";
    EASE["OUT_QUART"] = "easeOutQuart";
    EASE["IN_OUT_QUART"] = "easeInOutQuart";
    EASE["IN_QUINT"] = "easeInQuint";
    EASE["OUT_QUINT"] = "easeOutQuint";
    EASE["IN_OUT_QUINT"] = "easeInOutQuint";
    EASE["IN_SINE"] = "easeInSine";
    EASE["OUT_SINE"] = "easeOutSine";
    EASE["IN_OUT_SINE"] = "easeInOutSine";
    EASE["IN_EXPO"] = "easeInExpo";
    EASE["OUT_EXPO"] = "easeOutExpo";
    EASE["IN_OUT_EXPO"] = "easeInOutExpo";
    EASE["IN_CIRC"] = "easeInCirc";
    EASE["OUT_CIRC"] = "easeOutCirc";
    EASE["IN_OUT_CIRC"] = "easeInOutCirc";
    EASE["IN_ELASTIC"] = "easeInElastic";
    EASE["OUT_ELASTIC"] = "easeOutElastic";
    EASE["IN_OUT_ELASTIC"] = "easeInOutElastic";
    EASE["IN_BACK"] = "easeInBack";
    EASE["OUT_BACK"] = "easeOutBack";
    EASE["IN_OUT_BACK"] = "easeInOutBack";
    EASE["IN_BOUNCE"] = "easeInBounce";
    EASE["OUT_BOUNCE"] = "easeOutBounce";
    EASE["IN_OUT_BOUNCE"] = "easeInOutBounce";
})(EASE = exports.EASE || (exports.EASE = {}));
var SPLINE;
(function (SPLINE) {
    SPLINE["CATMULLROM"] = "splineCatmullRom";
})(SPLINE = exports.SPLINE || (exports.SPLINE = {}));
exports.SETTINGS = {
    LEFT_HANDED: "_playerOptions._leftHanded",
    PLAYER_HEIGHT: "_playerOptions._playerHeight",
    AUTOMATIC_PLAYER_HEIGHT: "_playerOptions._automaticPlayerHeight",
    SFX_VOLUME: "_playerOptions._sfxVolume",
    REDUCE_DEBRIS: "_playerOptions._reduceDebris",
    NO_HUD: "_playerOptions._noTextsAndHuds",
    HIDE_MISSES: "_playerOptions._noFailEffects",
    ADVANCED_HUD: "_playerOptions._advancedHud",
    AUTO_RESTART: "_playerOptions._autoRestart",
    TRAIL_INTENSITY: "_playerOptions._saberTrailIntensity",
    NJS: "_playerOptions._noteJumpStartBeatOffset",
    HIDE_SPAWN_LIGHT: "_playerOptions._hideNoteSpawnEffect",
    ADAPTIVE_SFX: "_playerOptions._adaptiveSfx",
    LIGHTS: {
        VALUE: "_playerOptions._environmentEffectsFilterDefaultPreset",
        ALL_EFFECTS: "AllEffects",
        NO_FLICKERING: "Strobefilter",
        NO_EFFECTS: "NoEffects"
    },
    LIGHTS_EXPLUS: {
        VALUE: "_playerOptions._environmentEffectsFilterExpertPlusPreset",
        ALL_EFFECTS: "AllEffects",
        NO_FLICKERING: "Strobefilter",
        NO_EFFECTS: "NoEffects"
    },
    ENERGY_TYPE: {
        VALUE: "_modifiers._energyType",
        BAR: "Bar",
        BATTERY: "Battery"
    },
    NO_FAIL: "_modifiers._noFailOn0Energy",
    INSTA_FAIL: "_modifiers._instaFail",
    SABER_CLASH_FAIL: "_modifiers._failOnSaberClash",
    ENABLED_OBSTACLES: {
        VALUE: "_modifiers._enabledObstacleType",
        ALL: "All",
        FULL_ONLY: "FullHeightOnly",
        NONE: "NoObstacles"
    },
    FAST_NOTES: "_modifiers._fastNotes",
    STRICT_ANGLES: "_modifiers._strictAngles",
    DISAPPEARING_ARROWS: "_modifiers._disappearingArrows",
    GHOST_NOTES: "_modifiers._ghostNotes",
    NO_BOMBS: "_modifiers._noBombs",
    SONG_SPEED: {
        VALUE: "_modifiers._songSpeed",
        NORMAL: "Normal",
        FASTER: "Faster",
        SLOWER: "Slower",
        SUPER_FAST: "SuperFast"
    },
    NO_ARROWS: "_modifiers._noArrows",
    PRO_MODE: "_modifiers._proMode",
    ZEN_MODE: "_modifiers._zenMode",
    SMALL_CUBES: "_modifiers._smallCubes",
    OVERRIDE_ENVIRONMENTS: "_environments._overrideEnvironments",
    OVERRIDE_DEFAULT_COLORS: "_colors._overrideDefaultColors",
    MIRROR_QUALITY: {
        VALUE: "_graphics._mirrorGraphicsSettings",
        OFF: 0,
        LOW: 1,
        MEDIUM: 2,
        HIGH: 3
    },
    BLOOM: {
        VALUE: "_graphics._mainEffectGraphicsSettings",
        ON: 1,
        OFF: 0
    },
    SMOKE: {
        VALUE: "_graphics._smokeGraphicsSettings",
        ON: 1,
        OFF: 0
    },
    BURN_MARKS: "_graphics._burnMarkTrailsEnabled",
    SCREEN_DISTORTION: "_graphics._screenDisplacementEffectsEnabled",
    MAX_SHOCKWAVE_PARTICLES: "_graphics._maxShockwaveParticles",
    DISABLE_CHROMA: "_chroma._disableChromaEvents",
    DISABLE_ENVIRONMENT_ENHANCEMENTS: "_chroma._disableEnvironmentEnhancements",
    ZEN_MODE_WALLS: "_chroma._forceZenModeWalls"
};
exports.PRESET = {
    MODCHART_SETTINGS: {
        _playerOptions: {
            _environmentEffectsFilterExpertPlusPreset: "AllEffects",
            _environmentEffectsFilterDefaultPreset: "AllEffects"
        },
        _graphics: {
            _mainEffectGraphicsSettings: true,
            _maxShockwaveParticles: 0,
            _screenDisplacementEffectsEnabled: true
        },
        _chroma: {
            _disableEnvironmentEnhancements: false,
            _disableChromaEvents: false,
            _forceZenModeWalls: true
        },
        _modifiers: {
            _noFailOn0Energy: true,
            _enabledObstacleType: "All"
        }
    },
    CHROMA_SETTINGS: {
        _playerOptions: {
            _environmentEffectsFilterExpertPlusPreset: "AllEffects",
            _environmentEffectsFilterDefaultPreset: "AllEffects"
        },
        _graphics: {
            _mainEffectGraphicsSettings: true
        },
        _chroma: {
            _disableEnvironmentEnhancements: false,
            _disableChromaEvents: false
        }
    }
};
var NOTE;
(function (NOTE) {
    // Type
    NOTE[NOTE["RED"] = 0] = "RED";
    NOTE[NOTE["BLUE"] = 1] = "BLUE";
    NOTE[NOTE["BOMB"] = 3] = "BOMB";
    // Direction
    NOTE[NOTE["UP"] = 0] = "UP";
    NOTE[NOTE["DOWN"] = 1] = "DOWN";
    NOTE[NOTE["LEFT"] = 2] = "LEFT";
    NOTE[NOTE["RIGHT"] = 3] = "RIGHT";
    NOTE[NOTE["UP_LEFT"] = 4] = "UP_LEFT";
    NOTE[NOTE["UP_RIGHT"] = 5] = "UP_RIGHT";
    NOTE[NOTE["DOWN_LEFT"] = 6] = "DOWN_LEFT";
    NOTE[NOTE["DOWN_RIGHT"] = 7] = "DOWN_RIGHT";
    NOTE[NOTE["DOT"] = 8] = "DOT";
})(NOTE = exports.NOTE || (exports.NOTE = {}));
var WALL;
(function (WALL) {
    // Type
    WALL[WALL["FULL"] = 0] = "FULL";
    WALL[WALL["CROUCH"] = 1] = "CROUCH";
})(WALL = exports.WALL || (exports.WALL = {}));
var EVENT;
(function (EVENT) {
    // Type
    EVENT[EVENT["BACK_LASERS"] = 0] = "BACK_LASERS";
    EVENT[EVENT["RING_LIGHTS"] = 1] = "RING_LIGHTS";
    EVENT[EVENT["LEFT_LASERS"] = 2] = "LEFT_LASERS";
    EVENT[EVENT["RIGHT_LASERS"] = 3] = "RIGHT_LASERS";
    EVENT[EVENT["CENTER_LASERS"] = 4] = "CENTER_LASERS";
    EVENT[EVENT["BOOST"] = 5] = "BOOST";
    EVENT[EVENT["LEFT_EXTRA"] = 6] = "LEFT_EXTRA";
    EVENT[EVENT["RIGHT_EXTRA"] = 7] = "RIGHT_EXTRA";
    EVENT[EVENT["RING_SPIN"] = 8] = "RING_SPIN";
    EVENT[EVENT["RING_ZOOM"] = 9] = "RING_ZOOM";
    EVENT[EVENT["BILLIE_LEFT"] = 10] = "BILLIE_LEFT";
    EVENT[EVENT["BILLIE_RIGHT"] = 11] = "BILLIE_RIGHT";
    EVENT[EVENT["LEFT_SPEED"] = 12] = "LEFT_SPEED";
    EVENT[EVENT["RIGHT_SPEED"] = 13] = "RIGHT_SPEED";
    EVENT[EVENT["EARLY_ROTATION"] = 14] = "EARLY_ROTATION";
    EVENT[EVENT["LATE_ROTATION"] = 15] = "LATE_ROTATION";
    EVENT[EVENT["LOWER_HYDRAULICS"] = 16] = "LOWER_HYDRAULICS";
    EVENT[EVENT["RAISE_HYDRAULICS"] = 17] = "RAISE_HYDRAULICS";
    // Regular Action
    EVENT[EVENT["OFF"] = 0] = "OFF";
    EVENT[EVENT["BLUE_ON"] = 1] = "BLUE_ON";
    EVENT[EVENT["BLUE_FLASH"] = 2] = "BLUE_FLASH";
    EVENT[EVENT["BLUE_FADE"] = 3] = "BLUE_FADE";
    EVENT[EVENT["BLUE_IN"] = 4] = "BLUE_IN";
    EVENT[EVENT["RED_ON"] = 5] = "RED_ON";
    EVENT[EVENT["RED_FLASH"] = 6] = "RED_FLASH";
    EVENT[EVENT["RED_FADE"] = 7] = "RED_FADE";
    EVENT[EVENT["RED_IN"] = 8] = "RED_IN";
    // Boost Action
    EVENT[EVENT["BOOST_OFF"] = 0] = "BOOST_OFF";
    EVENT[EVENT["BOOST_ON"] = 1] = "BOOST_ON";
    // Interscope Action
    EVENT[EVENT["NO_HYDRAULICS"] = 0] = "NO_HYDRAULICS";
    EVENT[EVENT["ALL_CARS"] = 1] = "ALL_CARS";
    EVENT[EVENT["LEFT_CARS"] = 2] = "LEFT_CARS";
    EVENT[EVENT["RIGHT_CARS"] = 3] = "RIGHT_CARS";
    EVENT[EVENT["FRONT_CARS"] = 4] = "FRONT_CARS";
    EVENT[EVENT["FRONT_MIDDLE_CARS"] = 5] = "FRONT_MIDDLE_CARS";
    EVENT[EVENT["BACK_MIDDLE_CARS"] = 6] = "BACK_MIDDLE_CARS";
    EVENT[EVENT["BACK_CARS"] = 7] = "BACK_CARS";
    // Rotation Action
    EVENT[EVENT["CCW_60"] = 0] = "CCW_60";
    EVENT[EVENT["CCW_45"] = 1] = "CCW_45";
    EVENT[EVENT["CCW_30"] = 2] = "CCW_30";
    EVENT[EVENT["CCW_15"] = 3] = "CCW_15";
    EVENT[EVENT["CW_15"] = 4] = "CW_15";
    EVENT[EVENT["CW_30"] = 5] = "CW_30";
    EVENT[EVENT["CW_45"] = 6] = "CW_45";
    EVENT[EVENT["CW_60"] = 7] = "CW_60";
})(EVENT = exports.EVENT || (exports.EVENT = {}));
var ANIM;
(function (ANIM) {
    ANIM["POSITION"] = "_position";
    ANIM["DEFINITE_POSITION"] = "_definitePosition";
    ANIM["LOCAL_POSITION"] = "_localPosition";
    ANIM["ROTATION"] = "_rotation";
    ANIM["LOCAL_ROTATION"] = "_localRotation";
    ANIM["SCALE"] = "_scale";
    ANIM["DISSOLVE"] = "_dissolve";
    ANIM["DISSOLVE_ARROW"] = "_dissolveArrow";
    ANIM["COLOR"] = "_color";
    ANIM["INTERACTABLE"] = "_interactable";
    ANIM["ATTENUATION"] = "_attenuation";
    ANIM["OFFSET"] = "_offset";
    ANIM["STARTY"] = "_startY";
    ANIM["HEIGHT"] = "_height";
    ANIM["TIME"] = "_time";
})(ANIM = exports.ANIM || (exports.ANIM = {}));
// Known objects that work. Feel free to PR your own!
exports.ENV = {
    BTS: {
        PILLAR: {
            ID: new regex_1.Regex().start().add("PillarPair").seperate().add("PillarL").seperate().add("Pillar").end().string,
            SCALE: [10, 10 * (1 / 0.032), 10],
            ANCHOR: [0, -0.5, 0]
        },
        SOLID_LASER: {
            ID: new regex_1.Regex().add("SmallPillarPair").seperate().add("PillarL").seperate().add("LaserL").end().string,
            SCALE: [1 / 3.5, 7000, 1 / 3.5],
            ANCHOR: [0, 0.5, 0]
        },
        LOW_CLOUDS: {
            ID: "LowCloudsGenerator$",
            SCALE: [425, 40, 425],
            ANCHOR: [0, -0.25, 0]
        }
    },
    GAGA: {
        CUBE: {
            ID: "BackCube$",
            SCALE: [16, 7 / 10, 14 / 10],
            ANCHOR: [0, -0.5, -0.5]
        },
        SECOND_AURORA: {
            ID: new regex_1.Regex().add("Aurora").seperate().add("AuroraSecondary").end().string,
            SCALE: [900, 200, 1000],
            ANCHOR: [0, -0.25, 0]
        }
    }
};
var COLOR;
(function (COLOR) {
    COLOR["RGB"] = "RGB";
    COLOR["HSV"] = "HSV";
})(COLOR = exports.COLOR || (exports.COLOR = {}));
var LOOKUP;
(function (LOOKUP) {
    LOOKUP["CONTAINS"] = "Contains";
    LOOKUP["REGEX"] = "Regex";
    LOOKUP["EXACT"] = "Exact";
})(LOOKUP = exports.LOOKUP || (exports.LOOKUP = {}));
/*
ScuffedWalls Script:
0:Run
  Script:script.ts
  RunBefore: false
  RefreshOnSave: true`

ScuffedWalls Model:
0:ModelToWall
  Path:model.dae
  Track:model
  Type:3
  */ 
